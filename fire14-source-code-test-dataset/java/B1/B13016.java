import java.io.File;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.HashSet;
import java.util.Scanner;


public class RecycledNumbers {
	public static void main(String[] args) throws IOException{
		Scanner scanner = new Scanner(new File("input.txt"));
		int numCases = scanner.nextInt();
		
		PrintWriter pw = new PrintWriter(new File("output3.txt"));

		for(int i=1; i <= numCases; i++){
			long a = scanner.nextLong();
			long b = scanner.nextLong();
			
			int result = 0;
			// Computer number of digits
			long digits = computeNumOfDigits(a);
			// Iterate over all numbers
			for(long n=a; n <=b; n++){
				long m = n;
				HashSet<Long> generateNumbers = new HashSet<>();
				for(long j = 1; j < digits; j++){
					m = rotateRightMostDigit(m, digits);
					generateNumbers.add(m);				
				}
				
				// Iterate over all numbers generated by each number
				for(Long l:generateNumbers){
					if(computeNumOfDigits(l)==digits && l>n && l<=b){
						result++;
					}	
				}
				
			}
			//System.out.println("Case #" + i + ": " + result);
			pw.println("Case #" + i + ": " + result);
			pw.flush();
		}
	}

	private static long rotateRightMostDigit(long m, long digits) {
		long d = m%10;
		long rightPart = m/10;
		long leftPart = (int) Math.pow(10.0, digits -1);
		long result = (leftPart * d) + rightPart;
		return result;
	}

	private static long computeNumOfDigits(long inputNum) {
		if(inputNum == 0){
			return 1;
		}
		
		long digits = 0;
		
		while(inputNum!=0){
			inputNum = inputNum/10;
			digits++;
		}
		return digits;
	}

}
